@page "/Login"
@page "/Employee/Login"
@inject IEmployeeData employeeData
@inject IHttpClientFactory clientFactory

@using WeeControl.SharedKernel.DtosV1.Employee
@using WeeControl.Frontend.CommonLib.DataAccess
@using WeeControl.SharedKernel.DtosV1
@using System.Net
@using System.Net.Http.Headers
@using WeeControl.Frontend.CommonLib.DataAccess.Employee
@layout RestrictedLayout


<div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon">Username</span>
        </div>
        <input type="text" class="form-control" placeholder="Username" @bind="@loginDto.Username" />
    </div>
    
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon1">Password</span>
        </div>
        <input type="password" class="form-control" placeholder="Password" @bind="@loginDto.Password" />
    </div>
    
    <button class="btn btn-primary" @onclick="ProcessLoginAsync" type="submit">Login</button>
    <button class="btn btn-secondary" @onclick="ProcessLoginAsync" type="submit">Forgot Password</button>
    <label>@temp</label>
    <div class="alert alert-warning" role="alert">
      This is a warning alert—check it out!
    </div>
</div>

@code
{
    private readonly CreateLoginDto loginDto = new();
    private string temp;

    private async Task ProcessLoginAsync()
    {
        var response = await employeeData.GetToken(loginDto);
        if (response.HttpStatuesCode == (int) HttpStatusCode.OK)
        {
            temp = response.Payload.Token;
        }
        else
        {
            temp = response.HttpStatuesCode.ToString();
        }
    }
}
