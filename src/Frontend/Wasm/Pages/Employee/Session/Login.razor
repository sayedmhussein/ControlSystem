@page "/Login"
@page "/Employee/Login"
@inject IEmployeeData employeeData
@inject IHttpClientFactory clientFactory
@inject NavigationManager navManager
@inject IDevice device
@inject IJSRuntime jsRuntime

@using WeeControl.SharedKernel.DtosV1.Employee
@using System.Net
@using WeeControl.Frontend.CommonLib.DataAccess.Employee
@using WeeControl.Frontend.CommonLib.Interfaces
@using System.ComponentModel
@layout RestrictedLayout

<div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon">Username</span>
        </div>
        <input type="text" class="form-control" placeholder="Username" @bind="@loginDto.Username" />
    </div>
    
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon1">Password</span>
        </div>
        <input type="password" class="form-control" placeholder="Password" @bind="@loginDto.Password" />
    </div>
    
    <button class="btn btn-primary" @onclick="ProcessLoginAsync" type="submit">Login</button>
    <button class="btn btn-secondary" @onclick="ProcessLoginAsync" type="submit">Forgot Password</button>
    <label>@temp</label>
    @if (displayAlert)
    {
        <div id="alert_div" class="alert alert-warning" role="alert">
            @stringAlert
        </div>
    }
    
</div>

@code
{
    private readonly CreateLoginDto loginDto = new();
    private string temp;
    private bool displayAlert;
    private string stringAlert;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ClearFields();
    }

    private async Task ProcessLoginAsync()
    {
        var response = await employeeData.GetToken(loginDto);
        switch ((HttpStatusCode)response.HttpStatuesCode)
        {
            case HttpStatusCode.Accepted:
            case HttpStatusCode.OK:
                navManager.NavigateTo("/Home");
                ClearFields();
                break;
            case HttpStatusCode.NotFound:
                displayAlert = true;
                stringAlert = "Username and Password are not matched!";
                ClearFields();
                break;
            default:
                displayAlert = true;
                stringAlert = "Unexpected Error Occured, please try again.";
                break;
        }
    }

    private void ClearFields()
    {
        loginDto.Username = string.Empty;
        loginDto.Password = string.Empty;
    }
}
