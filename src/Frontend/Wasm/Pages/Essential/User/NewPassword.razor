@page "/NewPassword"
@page "/Authentication/NewPassword"
@using Microsoft.AspNetCore.Components
@using WeeControl.Common.SharedKernel.Essential
@using WeeControl.Common.SharedKernel.Essential.RequestDTOs
@using WeeControl.Frontend.FunctionalService.EssentialContext
@layout RestrictedLayout

@attribute [AllowAnonymous]
@inject NavigationManager NavManager
@inject IUserOperation UserOperation
@inject IJSRuntime jsRuntime

<div class="card">
    <h4 class="card-header">Please enter your new password</h4>
    <div class="card-body">
        <EditForm Model="@setForgottenDto" OnValidSubmit="SetNewPassword">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <label>Old Password</label>
                <InputText @bind-Value="setForgottenDto.OldPassword" type="password" class="form-control"/>
                <ValidationMessage For="@(() => setForgottenDto.OldPassword)"/>
                </div>
            <div class="form-group">
                <label>New Password</label>
                <InputText @bind-Value="setForgottenDto.NewPassword" type="password" class="form-control"/>
                <ValidationMessage For="@(() => setForgottenDto.NewPassword)"/>
            </div>
            <div class="form-group">
                <label>Repeat Password</label>
                <InputText @bind-Value="setForgottenDto.ConfirmNewPassword" type="password" class="form-control"/>
                <ValidationMessage For="@(() => setForgottenDto.ConfirmNewPassword)"/>
            </div>
            <button class="btn btn-primary">
                @if (loading)
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Save
            </button>
            @if (!string.IsNullOrEmpty(stringAlert))
            {
                <div class="alert alert-danger mt-3 mb-0">@stringAlert</div>
            }
        </EditForm>
    </div>
</div>

@code
{
    private readonly PasswordSetForgottenDto setForgottenDto = new();
    private bool loading;
    private string stringAlert;

    private async Task SetNewPassword()
    {
        loading = true;
        var response = await UserOperation.UpdatePasswordAsync(setForgottenDto);
        if (response.IsSuccess)
        {
            NavManager.NavigateTo("/Index");
        }
        else
        {
            stringAlert = response.MessageToUser;
            setForgottenDto.OldPassword = string.Empty;
        }
        
        loading = false;
    }
}