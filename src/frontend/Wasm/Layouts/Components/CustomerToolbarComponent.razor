
@using WeeControl.Host.WebApiService
@using WeeControl.Host.WebApiService.Contexts.User
@using WeeControl.Host.WebApiService.DeviceInterfaces
@inject IAuthenticationService UserAuthorizationService
@inject IGui Navigation

<MudToolBar Elevation="25" Class="d-flex">
    <MudLink Class="d-inline-flex" Href="/">
        <MudImage Src="images/logo.png" Alt="WeeControl" Width="20" Height="20" Style="margin-right: 5px"></MudImage>
    </MudLink>
    <MudMenu Class="d-inline-flex" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft" Label="WeeControl" ActivationEvent="@MouseEvent.MouseOver" Dense="true" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Primary" MaxHeight="@componentMaxHeight">
        @if (ShowLogout)
        {
            <MudMenuItem>
                <MudButton 
                    StartIcon="@Icons.Material.Outlined.Home"
                    Href="@ApplicationPages.Essential.HomePage">Home
                </MudButton>
            </MudMenuItem>
            @* @if (UserService.IsCustomer) *@
            @* { *@
            @*     <MenuOfCustomerComponent></MenuOfCustomerComponent> *@
            @* } *@
            @* @if (UserService.IsEmployee) *@
            @* { *@
            @*     <MenuOfEmployeeComponent></MenuOfEmployeeComponent> *@
            @* } *@
            <MenuOfEmployeeComponent></MenuOfEmployeeComponent>
            <MenuOfMenuComponent></MenuOfMenuComponent>
        }
    </MudMenu>
    
    <MudSpacer></MudSpacer>
    @if (ShowLogin)
    {
        
    }
    @if (ShowLogout)
    {
        <MudText></MudText>
        <MudMenu Icon="@Icons.Material.Outlined.Notifications" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" MaxHeight="@componentMaxHeight">
            <MenuOfNotificationComponent></MenuOfNotificationComponent>
        </MudMenu>
    }
</MudToolBar>

@code {
    private int componentMaxHeight = 400;
    
    [Parameter]
    public bool ShowLogin { get; set; }
    
    [Parameter]
    public bool ShowLogout { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        //await UserService.Sync();
    }

    
}