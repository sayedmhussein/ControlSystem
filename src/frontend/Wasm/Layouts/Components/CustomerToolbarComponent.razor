@using WeeControl.Frontend.ApplicationService.Interfaces
@using WeeControl.Frontend.ApplicationService.Contexts.Essential.Interfaces
@using IAuthorizationService = WeeControl.Frontend.ApplicationService.Contexts.Essential.Interfaces.IUserAuthorizationService
@inject IUserService UserService
@inject IAuthorizationService UserAuthorizationService
@inject IDevicePageNavigation Navigation

<MudToolBar Elevation="25" Class="d-flex">
    <MudLink Class="d-inline-flex" Href="/">
        <MudImage Src="images/logo.png" Alt="WeeControl" Width="20" Height="20" Style="margin-right: 5px"></MudImage>
    </MudLink>
    <MudMenu Class="d-inline-flex" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft" Label="WeeControl" ActivationEvent="@MouseEvent.MouseOver" Dense="true" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Primary" MaxHeight="@componentMaxHeight">
        <MudMenuItem>
            <MudButton 
                StartIcon="@Icons.Material.Outlined.Home"
                Href="@Pages.Essential.HomePage">Home
            </MudButton>
        </MudMenuItem>
        @if (ShowLogout)
        {
            @if (UserService.IsCustomer)
            {
                <MenuOfCustomerComponent></MenuOfCustomerComponent>
            }
            @if (UserService.IsEmployee)
            {
                <MenuOfEmployeeComponent></MenuOfEmployeeComponent>
            }
            <MenuOfMenuComponent></MenuOfMenuComponent>
        }
    </MudMenu>
    
    <MudSpacer></MudSpacer>
    @if (ShowLogin)
    {
        <MudIconButton 
            Icon="@Icons.Material.Outlined.Login" 
            Color="Color.Primary" Title="Login"
            OnClick="@(() => Navigation.NavigateToAsync(Pages.Essential.UserPage))"
        ></MudIconButton>
    }
    @if (ShowLogout)
    {
        <MudText>@UserService.GreetingMessage</MudText>
        <MudMenu Icon="@Icons.Material.Outlined.Notifications" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" MaxHeight="@componentMaxHeight">
            <MenuOfNotificationComponent></MenuOfNotificationComponent>
        </MudMenu>
    }
</MudToolBar>

@code {
    private int componentMaxHeight = 400;
    
    [Parameter]
    public bool ShowLogin { get; set; }
    
    [Parameter]
    public bool ShowLogout { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await UserService.Refresh();
    }

    private async Task Logout()
    {
        await UserAuthorizationService.Logout();
        ShowLogin = true;
        StateHasChanged();
    }
}