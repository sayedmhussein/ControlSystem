@using Microsoft.AspNetCore.Components
@using WeeControl.Frontend.ApplicationService.Contexts.Anonymous.Interfaces
@using WeeControl.Frontend.ApplicationService.Interfaces

@attribute [Route(Pages.Anonymous.LoginPage)]
@inject IAuthorizationViewModel ViewModel
@inject IPublicViewModel ResetViewModel
@inject IDevicePageNavigation Navigation

@if (showForgotMyPasswordPanel)
{
    <div class="card">
        <h4 class="card-header">Please enter your username and and email address</h4>
        <div class="card-body">
            <EditForm Model="@ResetViewModel" OnValidSubmit="ResetViewModel.RequestPasswordReset">
                <DataAnnotationsValidator/>
                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="ResetViewModel.PasswordResetModel.Email" type="email" class="form-control"/>
                    <ValidationMessage For="@(() => ResetViewModel.PasswordResetModel.Email)"/>
                </div>
                <div class="form-group">
                    <label>Username</label>
                    <InputText @bind-Value="ResetViewModel.PasswordResetModel.Username" class="form-control"/>
                    <ValidationMessage For="@(() => ResetViewModel.PasswordResetModel.Username)"/>
                </div>
                <button class="btn btn-primary">
                    @if (ResetViewModel.IsLoading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Forgot Password
                </button>
                <button class="btn btn-secondary" @onclick="@(() => showForgotMyPasswordPanel = false)">Login Instead</button>
            </EditForm>
        </div>
    </div>
}
else
{
    <MudCard Class="flex-fill" Style="max-width: 600px; align-content: center; align-self: center; justify-content: center">
    <MudCardHeader>
        <h4>Please enter your username and password</h4>
    </MudCardHeader>
    <MudCardContent>
        <EditForm Model="@ViewModel" OnValidSubmit="ViewModel.Login">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <label>Username or Email</label>
                <InputText @bind-Value="ViewModel.LoginModel.UsernameOrEmail" readonly="@ViewModel.IsLoading" class="form-control"/>
                <ValidationMessage For="@(() => ViewModel.LoginModel.UsernameOrEmail)"/>
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="ViewModel.LoginModel.Password" readonly="@ViewModel.IsLoading" type="password" class="form-control"/>
                <ValidationMessage For="@(() => ViewModel.LoginModel.Password)"/>
            </div>
        </EditForm>
    </MudCardContent>
    <MudCardActions>
        <MudButton
            Variant="Variant.Filled"
            ButtonType="ButtonType.Submit"
            Color="Color.Primary"
            Disabled="@ViewModel.IsLoading" 
            Size="Size.Large"
            Class="ml-auto" @onclick="@ViewModel.Login">
            @if (ViewModel.IsLoading)
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            Login
        </MudButton>
        <MudSpacer></MudSpacer>
        <MudButton
            Variant="Variant.Outlined"
            Color="Color.Default"
            Disabled="@ViewModel.IsLoading"
            DisableElevation="true" 
            Size="Size.Small"
            Class="ml-auto align-content-sm-end" 
            @onclick="@(() => showForgotMyPasswordPanel = true)">Reset Password</MudButton>
        <MudButton
            Variant="Variant.Outlined"
            Color="Color.Default"
            Disabled="@ViewModel.IsLoading"
            DisableElevation="true" 
            Size="Size.Small"
            Class="ml-auto align-content-sm-end" 
            @onclick="@(() => Navigation.NavigateToAsync(Pages.Anonymous.CustomerRegisterPage))">Register</MudButton>
    </MudCardActions>
</MudCard>
}




@code
{
    private bool showForgotMyPasswordPanel = false;
    
    protected override async void OnInitialized()
    {
        await base.OnInitializedAsync();

        await ViewModel.Init();
    }
}