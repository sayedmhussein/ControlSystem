@using WeeControl.SharedKernel
@using System.Security.Claims

<MudPaper>
    <p class="align-self-center">Here we put compnay introduction and required views for unregistered and registered customers.</p>
    
    <h1>List of Claims embidded in token</h1>
    <MudTable Items="@claims" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>Type</MudTh>
            <MudTh>Type Meaning</MudTh>
            <MudTh>Value</MudTh>
            <MudTh>Value Meaning</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Type">@context.Type</MudTd>
            <MudTd DataLabel="Type Meaning">@ClaimsValues.GetClaimTypes().FirstOrDefault(x => x.Value == context.Type).Key</MudTd>
            <MudTd DataLabel="Value">@context.Value</MudTd>
            <MudTd DataLabel="Value Meaning">@ClaimsValues.GetClaimValues().FirstOrDefault(x => x.Value == context.Value).Key</MudTd>
        </RowTemplate>
    </MudTable>
</MudPaper>



@code
{
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }
    
    private readonly ICollection<Claim> claims = new List<Claim>();
    private IDictionary<string,string> claimTypes = new Dictionary<string, string>();
    private IDictionary<string,string> claimTags = new Dictionary<string, string>();
    
    protected override Task OnInitializedAsync()
    {
        return GetClaims();
    }

    private async Task GetClaims()
    {
        foreach (var claim in (await AuthState).User.Claims)
        {
            claims.Add(claim);  
        }
    }
}
