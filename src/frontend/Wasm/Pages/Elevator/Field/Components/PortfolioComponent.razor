@using Microsoft.AspNetCore.Components
@using WeeControl.Frontend.ApplicationService.Contexts.Elevator
<h3>PortfolioComponent</h3>
<MudPaper>
    <MudToolBar>
        <MudIconButton Icon="@Icons.Material.Outlined.Add" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Outlined.Refresh"/>
    </MudToolBar>
    
    <MudTable 
        T="@PortfolioModel" 
        Loading="true" 
        over="true" 
        Items="@Data" 
        Filter="new Func<PortfolioModel,bool>(FilterFunc1)" 
        @bind-SelectedItem="selectedItemFromTable">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Portfolio</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Contract No</MudTh>
            <MudTh>Unit No</MudTh>
            <MudTh>Building Name</MudTh>
            <MudTh>Building Address</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Contract No.">@context.ContractNo</MudTd>
            <MudTd DataLabel="Unit No.">@context.UnitNo</MudTd>
            <MudTd DataLabel="Building Name">@context.BuildingName</MudTd>
            <MudTd DataLabel="Building Name">@context.BuildingAddress</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>

</MudPaper>

@code {
    private string searchString1 = string.Empty;
    private PortfolioModel selectedItemFromTable = null;

    private IEnumerable<PortfolioModel> Data => new List<PortfolioModel>()
    {
        new() {BuildingName = "Building Name", ContractNo = "Contract No", UnitNo = "Unit No" }
    };

    private bool FilterFunc1(PortfolioModel element) => FilterFunc(element, searchString1);

    private bool FilterFunc(PortfolioModel element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.BuildingName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.ContractNo.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.ContractNo} {element.UnitNo} {element.BuildingName}".Contains(searchString))
            return true;
        return false;
    }
}