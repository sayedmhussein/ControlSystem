@using Microsoft.AspNetCore.Components
@using IAuthorizationService = WeeControl.Frontend.ApplicationService.Contexts.Essential.Interfaces.IUserAuthorizationService

@attribute [Route(Pages.Essential.UserPage)]
@inject IAuthorizationService UserAuthorizationService

@if (isAuthorized)
{
    <PasswordChangeComponent></PasswordChangeComponent>
}
else
{
    <MudCard Class="flex-fill" Style="max-width: 600px; align-content: center; align-self: center; justify-content: center">
        @switch (currentView)
        {
            case CurrentViews.Login:
                <LoginComponent></LoginComponent>
                break;
            case CurrentViews.Register:
                <RegisterComponent></RegisterComponent>
                break;
            case CurrentViews.ForgotPassword:
                <PasswordResetComponent></PasswordResetComponent>
                break;
            default:
                throw new ArgumentOutOfRangeException();
        }
    
        <MudCardActions>
            <MudButton
                Variant="Variant.Filled"
                ButtonType="ButtonType.Submit"
                Color="Color.Primary"
                hidden="@(currentView == CurrentViews.Login)"
                Size="Size.Large"
                Class="ml-auto" @onclick="@(()=> currentView = CurrentViews.Login)">Go to Login</MudButton>
            <MudSpacer></MudSpacer>
            <MudButton
                Variant="Variant.Outlined"
                Color="Color.Default"
                hidden="@(currentView == CurrentViews.ForgotPassword)"
                DisableElevation="true" 
                Size="Size.Small"
                Class="ml-auto align-content-sm-end" 
                @onclick="@(() => currentView = CurrentViews.ForgotPassword)">Forgot Password</MudButton>
            <MudButton
                Variant="Variant.Outlined"
                Color="Color.Default"
                hidden="@(currentView == CurrentViews.Register)"
                DisableElevation="true"
                Size="Size.Small"
                Class="ml-auto align-content-sm-end" 
                @onclick="@(() => currentView = CurrentViews.Register)">Register</MudButton>
        </MudCardActions>
    </MudCard>
}


@code
{
    private bool isAuthorized;
    private CurrentViews currentView;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (await UserAuthorizationService.IsAuthorized())
        {
            isAuthorized = true;
        }
        else
        {
            isAuthorized = false;
            currentView = CurrentViews.Login;
        }
    }

    enum CurrentViews
    {
        Login, Register, ForgotPassword
    }
}