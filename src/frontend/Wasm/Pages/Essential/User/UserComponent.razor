@using System.ComponentModel.DataAnnotations
@using WeeControl.Frontend.ApplicationService.Essential.Models
@using WeeControl.Frontend.ApplicationService.Interfaces

@inject IPersistedLists Lists


<EditForm Model="@RegisterModel" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator/>
    <MudCard>
        <MudCardHeader><h1>@Subject</h1></MudCardHeader>
        <MudCardContent>
            <MudGrid>
                <MudItem xs="3">
                    <MudTextField Label="First Name" HelperText="Max. 8 characters"
                                  @bind-Value="RegisterModel.FirstName" For="@(() => RegisterModel.FirstName)"/>
                </MudItem>
                <MudItem xs="3">
                    <MudTextField Label="Second Name" HelperText="Max. 8 characters"
                                  @bind-Value="RegisterModel.SecondName" For="@(() => RegisterModel.SecondName)"/>
                </MudItem>
                <MudItem xs="3">
                    <MudTextField Label="Third name" HelperText="Max. 8 characters"
                                  @bind-Value="RegisterModel.ThirdName" For="@(() => RegisterModel.ThirdName)"/>
                </MudItem>
                <MudItem xs="3">
                    <MudTextField Label="Last name" HelperText="Max. 8 characters"
                                  @bind-Value="RegisterModel.LastName" For="@(() => RegisterModel.LastName)"/>
                </MudItem>
            </MudGrid>
            <MudSelect T="string" Label="Office/Territory" AnchorOrigin="Origin.BottomCenter" @bind-Value="RegisterModel.TerritoryId">
                <MudSelectItem Value="@("USA-HO")" />
                <MudSelectItem Value="@("EGP-HO")" />
                <MudSelectItem Value="@("SAU-HO")" />
            </MudSelect>
            <MudTextField Label="Email" Class="mt-3"
                          @bind-Value="RegisterModel.Email" For="@(() => RegisterModel.Email)"/>
            <MudTextField Label="Username" HelperText="Max. 8 characters"
                          @bind-Value="RegisterModel.Username" For="@(() => RegisterModel.Username)"/>
            <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                          @bind-Value="RegisterModel.Password" For="@(() => RegisterModel.Password)" InputType="InputType.Password"/>
            <MudTextField Label="Password" HelperText="Repeat the password" Class="mt-3"
                          @bind-Value="RegisterModel.Password2" For="@(() => RegisterModel.Password2)" InputType="InputType.Password"/>
            <MudTextField Label="Mobile Number" HelperText="Max. 8 characters"
                          @bind-Value="RegisterModel.MobileNo" For="@(() => RegisterModel.MobileNo)"/>
            <MudSelect T="string" Label="Nationality" AnchorOrigin="Origin.BottomCenter" @bind-Value="RegisterModel.Nationality">
                @foreach (var l in Lists.Countries)
                {
                    <MudSelectItem Value="@(l.CountryCode)">@l.CountryName</MudSelectItem>
                }
            </MudSelect>
        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>

@code {

    [Parameter]
    public string Subject { get; set; } = "User Details";

    [Parameter]
    public EventCallback<UserRegisterModel> SuccessfulModelData { get; set; }

    private UserRegisterModel RegisterModel { get; } = new UserRegisterModel();
    
    private void OnValidSubmit(EditContext context)
    {
        SuccessfulModelData.InvokeAsync(RegisterModel);
        StateHasChanged();
    }
}