@using WeeControl.Frontend.ApplicationService.Essential.User
<EditForm Model="model" OnValidSubmit="() => ChangePassword.InvokeAsync(model)">
    <DataAnnotationsValidator/>
    <MudCard>
        <MudCardHeader Style="font-size: large">Changing Password</MudCardHeader>
        <MudCardContent>
            <MudTextField Label="Old Password" HelperText="Max. 8 characters"
                          @bind-Value="model.OldPassword" For="@(() => model.OldPassword)" InputType="InputType.Password"/>
            <MudTextField Label="New Password" HelperText="Choose a strong password" Class="mt-3"
                          @bind-Value="model.NewPassword" For="@(() => model.NewPassword)" InputType="InputType.Password"/>
            <MudTextField Label="New Password" HelperText="Repeat the password" Class="mt-3"
                          @bind-Value="model.ConfirmPassword" For="@(() => model.ConfirmPassword)" InputType="InputType.Password"/>
        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>

@code
{
    private PasswordChangeModel model = new PasswordChangeModel();
    
    [Parameter]
    public EventCallback<PasswordChangeModel> ChangePassword { get; set; }
}