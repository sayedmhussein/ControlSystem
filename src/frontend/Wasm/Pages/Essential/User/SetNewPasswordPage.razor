@attribute [Route(Pages.Essential.User.SetNewPasswordPage)]
@using Microsoft.AspNetCore.Components
@using WeeControl.Frontend.ApplicationService
@using WeeControl.Frontend.ApplicationService.Essential.ViewModels

@attribute [AllowAnonymous]
@inject PasswordChangeLegacyViewModel ChangeLegacyViewModel

<PasswordChangeComponent
    Model="ChangeLegacyViewModel.Model"
    ChangePassword="ChangeLegacyViewModel.ChangeMyPassword">
</PasswordChangeComponent>

<div class="card">
    <h4 class="card-header">Please enter your new password</h4>
    <div class="card-body">
        <EditForm Model="@ChangeLegacyViewModel" OnValidSubmit="ChangeLegacyViewModel.ChangeMyPassword">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <label>Old Password</label>
                <InputText @bind-Value="ChangeLegacyViewModel.OldPassword" type="password" class="form-control"/>
                <ValidationMessage For="@(() => ChangeLegacyViewModel.OldPassword)"/>
                </div>
            <div class="form-group">
                <label>New Password</label>
                <InputText @bind-Value="ChangeLegacyViewModel.NewPassword" type="password" class="form-control"/>
                <ValidationMessage For="@(() => ChangeLegacyViewModel.NewPassword)"/>
            </div>
            <div class="form-group">
                <label>Repeat Password</label>
                <InputText @bind-Value="ChangeLegacyViewModel.ConfirmNewPassword" type="password" class="form-control"/>
                <ValidationMessage For="@(() => ChangeLegacyViewModel.ConfirmNewPassword)"/>
            </div>
            <button class="btn btn-primary">
                @if (ChangeLegacyViewModel.IsLoading)
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Save
            </button>
        </EditForm>
    </div>
</div>

@code
{

}