@inject IUserAuthorizationService AuthorizationService

<MudCardHeader>
    <h4>Please enter your username and password</h4>
</MudCardHeader>

<MudCardContent>
    <EditForm Model="@loginModel" OnValidSubmit="@(() => AuthorizationService.Login(loginModel))">
        <DataAnnotationsValidator/>
        <div class="form-group">
            <label>Username or Email</label>
            <InputText @bind-Value="loginModel.UsernameOrEmail" readonly="@AuthorizationService.IsLoading" class="form-control"/>
            <ValidationMessage For="@(() => loginModel.UsernameOrEmail)"/>
        </div>
        <div class="form-group">
            <label>Password</label>
            <InputText @bind-Value="loginModel.Password" readonly="@AuthorizationService.IsLoading" type="password" class="form-control"/>
            <ValidationMessage For="@(() => loginModel.Password)"/>
        </div>
        <MudButton 
            ButtonType="ButtonType.Submit" 
            Variant="Variant.Filled" 
            Color="Color.Primary" 
            Disabled="@AuthorizationService.IsLoading" 
            Class="ml-auto">@if (AuthorizationService.IsLoading)
                            {
                                <span class="spinner-border spinner-border-sm mr-1"></span>
                            }
            Login</MudButton>
    </EditForm>
</MudCardContent>

@code
{
    private readonly LoginModel loginModel = new();
}
