@attribute [Route(ApplicationPages.Essential.LoginPage)]
@attribute [AllowAnonymous]

@using Microsoft.AspNetCore.Components
@using WeeControl.Core.DataTransferObject.Contexts.User
@using WeeControl.Host.WebApiService
@using WeeControl.Host.WebApiService.Contexts.User
@inject IAuthenticationService AuthorizationService

<MudCardHeader>
    <h4>Please enter your username and password</h4>
</MudCardHeader>

<MudCardContent Style="max-width: 600px">
    <EditForm Model="@loginModel" OnValidSubmit="@(() => { isLoading = true;
                                                             AuthorizationService.Login(loginModel); 
                                                             isLoading = false; })">
        <DataAnnotationsValidator/>
        <div class="form-group">
            <label>Username or Email</label>
            <InputText @bind-Value="loginModel.UsernameOrEmail" readonly="@isLoading" class="form-control"/>
            <ValidationMessage For="@(() => loginModel.UsernameOrEmail)"/>
        </div>
        <div class="form-group">
            <label>Password</label>
            <InputText @bind-Value="loginModel.Password" readonly="@isLoading" type="password" class="form-control"/>
            <ValidationMessage For="@(() => loginModel.Password)"/>
        </div>
        <MudButton
            ButtonType="ButtonType.Submit"
            Variant="Variant.Filled"
            Color="Color.Primary"
            Disabled="@isLoading"
            Class="ml-auto">
            @if (isLoading)
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            Login
        </MudButton>
    </EditForm>
</MudCardContent>

@code
{
    private readonly LoginRequestDto loginModel = new();
    private bool isLoading = false;
}
