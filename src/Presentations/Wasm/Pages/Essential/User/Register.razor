@page "/Register"
@using WeeControl.SharedKernel.Essential
@using WeeControl.SharedKernel.Essential.RequestDTOs

@layout RestrictedLayout
@attribute [AllowAnonymous]

@inject NavigationManager NavManager

@inject IUserOperation UserOperation

<div class="card">
    <h4 class="card-header">Please fill the below fields</h4>
    <div class="card-body">
        <EditForm Model="@dto" OnValidSubmit="RegisterAsync">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <label>Email Address</label>
                <InputText @bind-Value="dto.Email" class="form-control"/>
                <ValidationMessage For="@(() => dto.Email)"/>
            </div>
            <div class="form-group">
                <label>Username</label>
                <InputText @bind-Value="dto.Username" class="form-control"/>
                <ValidationMessage For="@(() => dto.Username)"/>
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="dto.Password" type="password" class="form-control"/>
                <ValidationMessage For="@(() => dto.Password)"/>
            </div>
            <button class="btn btn-primary">
                @if (isLoading)
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Register
            </button>

            @if (!string.IsNullOrEmpty(alertMessage))
            {
                <div class="alert alert-danger mt-3 mb-0">@alertMessage</div>
            }
        </EditForm>
    </div>
</div>

@code {
    private readonly RegisterDto dto = new();
    private string alertMessage = string.Empty;
    private bool isLoading = false;

    private async Task RegisterAsync()
    {
        isLoading = true;
        var response = await UserOperation.RegisterAsync(dto);
        if (response.IsSuccess)
        {
            NavManager.NavigateTo("/Index", true);
        }
        else
        {
            alertMessage = response.MessageToUser;
        }
        isLoading = false;
    }
}